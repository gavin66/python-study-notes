from math import pi

# 如果需要转换的元组作为转换表达式的一部分，那么必须将它用圆括号括起来。
print('%s plus %s equals %s' % (1, 1, 2))

# 基本的转换说明符
"""
1. %字符：标记转换说明符的开始
2. 转换标志（可选）：- 表示左对齐; + 表示在转换之前要加上正负号； ""（空白字符）表示正数之前保留空格；0 表示转换值若位数不够则用0填充。
3. 最小字段宽度（可选）：转换后的字符串至少应该具有该值指定的宽度。如果是*，则宽度会从值元组中读出。
4. 点（.）后跟精度值（可选）：如果转换的是实数，精度值就表示出现在小数点后的位数。如果转换的是字符串，那么该数字就表示最大字段宽度。如果是*，那么经度将会从元组中读出。
5. 转换类型
    d,i         带符号的十进制整数
    o           不带符号的八进制
    u           不带符号的十进制
    x           不带符号的十六进制（小写）
    X           不带符号的十六进制（大写）
    e           科学记数法表示的浮点数（小写）
    E           科学记数法表示的浮点数（大写）
    f，F        十进制浮点数
    g           如果指数大于-4或者小于精度值则和e相同，其他情况与f相同
    G           如果指数大于-4或者小于精度值则和E相同，其他情况与F相同
    C           单字符（接受整数或者单字符字符串）
    r           字符串（使用repr转换任意python对象）
    s           字符串（使用str转换任意python对象）
"""

# 简单转换
print('Price of eggs: $%d' % 42)
print('Hexadecimal price of eggs: %x' % 42)
print('Pi: %f...' % pi)
print('Very inexact estimate of pi: %i' % pi)
print('Using str: %s' % 42)
print('Using repr: %r' % 42)

# 字段宽度和精度
# 字段宽度10
print('%10f' % pi)
# 字段宽度10 精度2
print('%10.2f' % pi)
# 精度2
print('%.2f' % pi)
# 可以使用 *（星号）作为字段宽度或精度，此时数值会从元组中读出
print('%.*s' % (5, 'Guido van Rossum'))

# 符号，对齐和0填充
# 以0填充
print('%010.2f' % pi)
# 左对齐数值
print('%-10.2f' % pi)
# 不管数字为正或负，前面都带有符号
print(('%+5d' % 10) + '\n' + ('%+5d' % -10))